

usage:



# CM server (generally use m5.4xlarge):

wget https://raw.githubusercontent.com/devriesb/ctk/master/bash/cm-install.sh
source cm-install.sh
install_cloudera_manager_6

# CM agents:

wget https://raw.githubusercontent.com/devriesb/ctk/master/bash/cm-install.sh
source cm-install.sh
install_cloudera_agent_6

# FreeIPA server:

wget https://raw.githubusercontent.com/devriesb/ctk/master/bash/cm-install.sh
source cm-install.sh
install_freeipa
# NOTE: still need to do "ipa-server-install" to finish setup



configure CM manager with the hosts, e.g.:
bdevries-cm6.vpc.cloudera.com, bdevries-agent-[1-3].vpc.cloudera.com

Installing NiFi via parcel:

To enable NiFi parcel, have to add the following to the parcel config (in the CM UI):
http://archive.cloudera.com/CFM/parcels/1.0.0.0/

Start by installing NiFi CA Service
- nifi.toolkit.keystore.password: nifi_ca_toolkit_keystore_password
- nifi.toolkit.tls.ca.server.token: nifi_ca_token_at_least_sixteen_chars

Install NiFi Registry Service
- keep defaults

Install NiFi
- leave defaults, stand up cluster
- To lower the election timeout period, change the following in
  "NiFi Node Advanced Configuration Snippet (Safety Valve) for staging/nifi.properties.xml" in the nifi CM config:

  nifi.cluster.flow.election.max.wait.time

- enable TLS: https://docs.cloudera.com/cfm/1.0.0/securing-cfm/topics/cfm-enabling-tls.html

    1. Ensure that the "NiFi Toolkit CA Service" radio button is selected.
    2. In the "Enable TLS/SSL for NiFi Node" field, check the NiFi Node Default Group box.
    3. In the "Initial Admin Identity" field, specify the information you will use to identify the initial admin user (e.g. "CN=initial_admin, OU=NIFI")
        a. NOTE THE SPACE AFTER COMMA!!!
    4. In the "NiFi CA Force Regenerate" field, check the NiFi Node Default Group

- If you need to clear HSTS stuff: https://www.thesslstore.com/blog/clear-hsts-settings-chrome-firefox/
- If you need to clear nifi state: rm -rf /var/lib/nifi/state

- generate cert to use for login to secure cluster:

/opt/cloudera/parcels/CFM-1.0.0.0/TOOLKIT/bin/tls-toolkit.sh client
-c <nifi-ca-host-fdqn> \
-t <nifi-ca-token> \
-p <nifi-ca-port> \
-D <user-dn> \
-T PKCS12



/opt/cloudera/parcels/CFM-1.0.0.0/TOOLKIT/bin/tls-toolkit.sh client \
-c bdevries-cm6.vpc.cloudera.com \
-t nifi_ca_token_at_least_sixteen_chars \
-p 10443 \
-D "CN=user_1, OU=NIFI" \
-T PKCS12


 e.g.:

/opt/cloudera/parcels/CFM-1.0.0.0/TOOLKIT/bin/tls-toolkit.sh client \
-c bdevries-agent-1.vpc.cloudera.com \
-t nifi_ca_token_at_least_sixteen_chars \
-p 10443 \
-D "CN=brandon, OU=NIFI" \
-T PKCS12


FreeIPA quick start guide:
https://www.freeipa.org/page/Quick_Start_Guide

on nodes using kerberos, need to add to /etc/krb5.conf:

[libdefaults]
...
default_realm = VPC.CLOUDERA.COM

[realms]
...
VPC.CLOUDERA.COM = {
  kdc = bdevries-freeipa.vpc.cloudera.com
}

setting up nifi w/ kerberos:
https://bryanbende.com/development/2016/08/31/apache-nifi-1.0.0-kerberos-authentication

=== setting up local parcel directory ===

https://docs.cloudera.com/documentation/enterprise/latest/topics/cm_ig_create_local_parcel_repo.html

cd /opt/cloudera/parcel-repo
wget https://archive.cloudera.com/cdh6/6.3.2/parcels/CDH-6.3.2-1.cdh6.3.2.p0.1605554-el7.parcel
sha1sum CDH-6.3.2-1.cdh6.3.2.p0.1605554-el7.parcel | awk '{ print $1 }' > CDH-6.3.2-1.cdh6.3.2.p0.1605554-el7.parcel.sha
sudo chown -R cloudera-scm:cloudera-scm /opt/cloudera/parcel-repo/*

go to http://bdevries-cm6.vpc.cloudera.com:7180/cmf/parcel/status
click "configure"
remove *all* remote parcel repositories


...actually, you can modify that in the wizard clicking on the parecl options.  BUT, you have to have the parcel and hash in place first

go to
    http://bdevries-cm6.vpc.cloudera.com:7180/cmf/license/wizard?returnUrl=%2Fcmf%2Fexpress-wizard%2Fwizard
run through wizard...

=== export template ===

wget http://admin:admin@bdevries-cm6.vpc.cloudera.com:7180/api/v19/clusters/Cluster%201/export -O cluster_template.json


update the template, setting the values for <changeme> as appropriate

delete the cluster, then restore using:

curl -X POST -H "Content-Type: application/json" -d @cluster_template.json http://admin:admin@bdevries-cm6.vpc.cloudera.com:7180/api/v19/cm/importClusterTemplate

hosts:
bdevries-cm6.vpc.cloudera.com,brdevri-agent-[1-3].vpc.cloudera.com

